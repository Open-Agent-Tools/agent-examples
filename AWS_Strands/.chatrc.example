# AWS Strands Chat Loop Configuration
#
# Copy this file to:
#   ~/.chatrc           (global config for all agents)
#   .chatrc             (project-level config in current directory)
#
# Format: YAML
# Precedence: Project .chatrc > Global ~/.chatrc > Built-in defaults

# ============================================================================
# COLORS - ANSI escape codes for terminal output
# ============================================================================
colors:
  user: '\033[97m'      # Bright white - maximum contrast
  agent: '\033[94m'     # Bright blue
  system: '\033[33m'    # Yellow
  error: '\033[91m'     # Bright red
  success: '\033[92m'   # Bright green
  dim: '\033[2m'        # Dim
  reset: '\033[0m'      # Reset

  # Alternative color schemes (comment/uncomment to switch)
  #
  # Monochrome (for colorblind users):
  # user: '\033[1m'     # Bold
  # agent: '\033[0m'    # Normal
  # system: '\033[2m'   # Dim
  #
  # High contrast:
  # user: '\033[97;1m'  # Bright white bold
  # agent: '\033[96;1m' # Bright cyan bold

# ============================================================================
# FEATURES - Toggle optional functionality
# ============================================================================
features:
  auto_save: false              # Automatically save conversations on exit
  rich_enabled: true            # Use rich library for formatting (if available)
  show_tokens: false            # Display token counts and cost estimates
  show_metadata: true           # Show agent metadata on startup
  readline_enabled: true        # Enable command history with readline

# ============================================================================
# PATHS - File system locations
# ============================================================================
paths:
  save_location: ~/agent-conversations    # Where to save conversations
  log_location: .logs                      # Where to write logs

# ============================================================================
# BEHAVIOR - Runtime behavior settings
# ============================================================================
behavior:
  max_retries: 3               # Maximum retry attempts on failure
  retry_delay: 2.0             # Seconds to wait between retries
  timeout: 120.0               # Request timeout in seconds
  spinner_style: dots          # Thinking indicator style (dots, line, arc, etc.)

# ============================================================================
# UI - User interface preferences
# ============================================================================
ui:
  show_banner: true            # Show welcome banner on startup
  show_thinking_indicator: true  # Show "Thinking..." spinner
  show_duration: true          # Show query duration
  show_status_bar: false       # Show status bar at top (agent, model, queries, time)

# ============================================================================
# PER-AGENT OVERRIDES
# ============================================================================
# Override settings for specific agents by name
agents:
  # Example: Complex Coding Clara with auto-save enabled
  'Complex Coding Clara':
    model_display_name: 'Claude Sonnet 4.5'  # Override if auto-detection fails
    features:
      auto_save: true
      show_tokens: true
    paths:
      save_location: ~/code-conversations/clara
    ui:
      show_metadata: false    # Hide metadata on startup for cleaner look

  # Example: Product Pete with custom colors
  'Product Pete':
    colors:
      agent: '\033[95m'       # Magenta for Pete
    features:
      auto_save: true
    paths:
      save_location: ~/product-conversations

  # Example: Research agents with different settings
  'DeepResearch Dave':
    behavior:
      timeout: 300.0          # Longer timeout for research
    features:
      auto_save: true

# ============================================================================
# USAGE EXAMPLES
# ============================================================================
#
# Global config for all agents:
#   cp .chatrc.example ~/.chatrc
#   edit ~/.chatrc
#
# Project-specific config:
#   cp AWS_Strands/.chatrc.example .chatrc
#   edit .chatrc
#
# Per-agent customization:
#   Add agent name to 'agents' section above
#
# Test your config:
#   python AWS_Strands/chat_loop.py --agent <agent_path>
#
